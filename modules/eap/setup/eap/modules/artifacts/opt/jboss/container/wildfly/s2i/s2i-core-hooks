
source "${JBOSS_CONTAINER_UTIL_LOGGING_MODULE}/logging.sh"

# override core variables
function s2i_core_env_init_hook() {
  wildfly_s2i_env_init
}

# add support for copying modules
function s2i_core_copy_artifacts_hook() {
  wildfly_s2i_copy_modules $*
  wildfly_s2i_copy_cfg $*
}

# Overrides are done in the script vs image configuration so $JBOSS_HOME can be
#   used, simplifying configuration for layered products
# Override target configuration directory
# Override target data directory
# Initialize variables for source/target directories for modules
function wildfly_s2i_env_init() {
  S2I_TARGET_CONFIGURATION_DIR="${S2I_TARGET_CONFIGURATION_DIR:-${JBOSS_HOME}/standalone/configuration}"
  S2I_TARGET_DATA_DIR="${S2I_TARGET_DATA_DIR:-${DATA_DIR:-${JBOSS_HOME}/standalone/data}}"

  WILDFLY_S2I_SOURCE_MODULES_DIR="${WILDFLY_S2I_SOURCE_MODULES_DIR:-modules}"
  WILDFLY_S2I_TARGET_MODULES_DIR="${WILDFLY_S2I_TARGET_MODULES_DIR:-${JBOSS_HOME}/modules}"
}

# copy modules
function wildfly_s2i_copy_modules() {
  if [ -d "${1}/${WILDFLY_S2I_SOURCE_MODULES_DIR}" ]; then
    if [ -z "${WILDFLY_S2I_TARGET_MODULES_DIR}" ]; then
      log_warning "Unable to copy modules files.  No target directory specified for WILDFLY_S2I_TARGET_MODULES_DIR"
    else
      if [ ! -d "${WILDFLY_S2I_TARGET_MODULES_DIR}" ]; then
        log_info "WILDFLY_S2I_TARGET_MODULES_DIR does not exist, creating ${WILDFLY_S2I_TARGET_MODULES_DIR}"
        mkdir -pm 775 "${WILDFLY_S2I_TARGET_MODULES_DIR}"
      fi
      log_info "Copying modules from $(realpath --relative-to ${S2I_SOURCE_DIR} ${1}/${WILDFLY_S2I_SOURCE_MODULES_DIR}) to ${WILDFLY_S2I_TARGET_MODULES_DIR}..."
      rsync -rl --out-format='%n' "${1}/${WILDFLY_S2I_SOURCE_MODULES_DIR}"/ "${WILDFLY_S2I_TARGET_MODULES_DIR}"
    fi
  fi 
}

# copy cfg
function wildfly_s2i_copy_cfg() {
  if [ -d "${1}/cfg" ]; then
    if [ -z "${S2I_TARGET_CONFIGURATION_DIR}" ]; then
      log_warning "Unable to copy configuration files.  No target directory specified for S2I_TARGET_CONFIGURATION_DIR"
    else
      if [ ! -d "${S2I_TARGET_CONFIGURATION_DIR}" ]; then
        log_info "S2I_TARGET_CONFIGURATION_DIR does not exist, creating ${S2I_TARGET_CONFIGURATION_DIR}"
        mkdir -pm 775 "${S2I_TARGET_CONFIGURATION_DIR}"
      fi
      log_info "Copying configuration from $(realpath --relative-to ${S2I_SOURCE_DIR} ${1}/cfg) to ${S2I_TARGET_CONFIGURATION_DIR}..."
      rsync -rl --out-format='%n' "${1}/cfg"/ "${S2I_TARGET_CONFIGURATION_DIR}"
    fi
  fi 
}