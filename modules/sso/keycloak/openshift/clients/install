#!/bin/bash
# Add Red Hat Single Sign-On client adapters
set -eu

#
# Main shell script body
#
SCRIPT_DIR="$(dirname "$0")"
ADDED_DIR="$SCRIPT_DIR/added"
SOURCES_DIR="/tmp/artifacts"

# Fixed base directory prefix for RH-SSO client adapters.
# !!! DO NOT CHANGE !!! Since this is exported to other images.
declare -r SSO_ADAPTERS_BASE_DIR="/opt/rh/rh-sso/client"

# RH-SSO expected adapter location to adapter zip archive name mapping
# Key:   Fixed directory location of the specific RH-SSO client adapter
#        in the RH-SSO image.
# Value: CSV zip archive names of the specific RH-SSO client adapters
#
# Feel free to:
# * Define additional RH-SSO adapters below as needed, or
# * Change the Zip archive name (value) for the specific adapter
#
# !!! BUT DO NOT CHANGE EXISTING final adapter locations (hash keys)
# since these are already exported to and used by other images !!!
declare -rA SSO_ADAPTER_DIR_TO_ZIP=(
  ["eap6"]="keycloak-eap6-adapter.zip,keycloak-saml-eap6-adapter.zip"
  ["eap7"]="keycloak-eap7-adapter.zip,keycloak-saml-eap7-adapter.zip"
  ["js"]="keycloak-js-adapter.zip"
)

for destination_leaf in "${!SSO_ADAPTER_DIR_TO_ZIP[@]}"
do
  # CIAM-535 / KEYCLOAK-18574: Rename any possible 'keycloak' prefixed
  # artifacts with their 'rh-sso' counterparts
  destination_leaf="${destination_leaf/keycloak/rh-sso}"

  destination="$SSO_ADAPTERS_BASE_DIR/$destination_leaf"
  mkdir -p "$destination"
  # Convert CSV to array
  IFS=',' read -ra adapter_zips <<<"${SSO_ADAPTER_DIR_TO_ZIP[$destination_leaf]}"
  # Copy the zip(s)
  cp -p "${adapter_zips[@]/#/$SOURCES_DIR/}" "$destination"

  # Write out a templated install script, and copy the associated adapter zips
  install_script="$destination/install.sh"
  {
    case $destination_leaf in
      eap*)
        echo '#!/bin/sh'
        echo 'set -eu'
        echo ''
        echo 'SCRIPT_DIR="$(dirname "$0")"'
        echo '# Remove the default version of the RH-SSO adapters'
        echo 'rm -rf /opt/eap/modules/system/add-ons/keycloak'
        echo ''

        # Extract the zip(s) at install time
        printf 'unzip -o "$SCRIPT_DIR/%s" -d "$JBOSS_HOME"\n' "${adapter_zips[@]}"

        echo ''
        echo 'chown -R jboss:root "$JBOSS_HOME"'
        echo 'chmod -R g+rwX "$JBOSS_HOME"'
        ;;
      js*)
        echo '#!/bin/sh'
        echo 'echo "Not implemented" >&2'
        echo 'exit 1'
    esac
  } > "$install_script"

  chmod ug+x "$install_script"
done
